// ! ------------------------------------------------------------ //
// !             [Microservice] Workflow models                   //
// ! ------------------------------------------------------------ //
// * Workflow                                                     //
// * WorkflowView                                                 //
// * WorkflowViewComponent                                        //
// * WorkflowState                                                //
// * WorkflowRoute                                                //
// * ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄ ⌄  //
model Workflow {
  id          String          @id @default(uuid())
  name        String          @unique
  description String?
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
  views       WorkflowView[]
  states      WorkflowState[]

  @@schema("microservice/workflow")
}

model WorkflowView {
  id             Int                     @id @default(autoincrement())
  name           String
  description    String?
  createdAt      DateTime                @default(now())
  updatedAt      DateTime                @updatedAt
  components     WorkflowViewComponent[]
  outboundRoutes WorkflowRoute[]         @relation("outboundRoutes")
  inboundRoutes  WorkflowRoute[]         @relation("inboundRoutes")
  workflow       Workflow                @relation(fields: [workflowId], references: [id], onDelete: Cascade)
  workflowId     String

  @@unique([name, workflowId])
  @@schema("microservice/workflow")
}

model WorkflowViewComponent {
  id         Int                       @id @default(autoincrement())
  type       WorkflowViewComponentType
  sort       Int
  properties Json
  createdAt  DateTime                  @default(now())
  updatedAt  DateTime                  @updatedAt
  view       WorkflowView              @relation(fields: [viewId], references: [id], onDelete: Cascade)
  viewId     Int

  @@schema("microservice/workflow")
}

enum WorkflowViewComponentType {
  INFO_Title
  INFO_Description
  INFO_Image
  INPUT_String
  INPUT_Number
  INPUT_Date
  INPUT_File

  @@schema("microservice/workflow")
}

enum WorkflowViewComponentTypePrefix {
  INFO
  INPUT

  @@schema("microservice/workflow")
}

model WorkflowState {
  id          Int             @id @default(autoincrement())
  name        String
  description String?
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
  routes      WorkflowRoute[]
  workflow    Workflow        @relation(fields: [workflowId], references: [id], onDelete: Cascade)
  workflowId  String

  @@unique([name, workflowId])
  @@schema("microservice/workflow")
}

model WorkflowRoute {
  id         Int           @id @default(autoincrement())
  startSign  Boolean       @default(false)
  view       WorkflowView  @relation("outboundRoutes", fields: [viewId], references: [id], onDelete: Cascade)
  viewId     Int
  state      WorkflowState @relation(fields: [stateId], references: [id], onDelete: Cascade)
  stateId    Int
  nextView   WorkflowView  @relation("inboundRoutes", fields: [nextViewId], references: [id], onDelete: Cascade)
  nextViewId Int
  nextRoleId String?       @db.Uuid // The next role to take over the next step.
  nextUserId String?       @db.Uuid // The next user to take over the next step.
  createdAt  DateTime      @default(now())
  updatedAt  DateTime      @updatedAt

  @@unique([viewId, stateId])
  @@schema("microservice/workflow")
}
